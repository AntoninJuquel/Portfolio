{"version":3,"sources":["providers/LanguageContext.js","components/CustomComponents.js","providers/ModalContext.js","utilities/Styles.js","utilities/Theme.js","components/Navbar.js","components/Introduction.js","components/About.js","components/Experience.js","components/Projects.js","components/Contact.js","components/Blog.js","App.js","serviceWorker.js","index.js"],"names":["LanguageContext","createContext","LanguageProvider","children","useState","language","setLanguage","languages","flag","file","require","GetFlags","useCallback","Object","keys","map","key","GetLanguageFlag","GetLanguageFile","value","useMemo","Provider","useLanguage","useContext","Hero","title","subTitle","center","classes","Box","Typography","variant","className","style","textAlign","paragraph","whiteSpace","MyModal","forwardRef","props","ref","modal","setModal","useImperativeHandle","Modal","disableEnforceFocus","disableAutoFocus","open","onClose","Container","ModalContext","ModalProvider","modalRef","useRef","useStyles","makeStyles","fontWeight","fontSize","container","marginTop","marginBottom","textField","background","border","borderRadius","buttonWrapper","position","left","top","transform","paper","padding","color","width","backgroundColor","purple","navbar","brand","flexGrow","display","brandText","cursor","index","theme","createMuiTheme","palette","primary","main","secondary","teal","default","text","overrides","MuiDialog","MuiDrawer","paperAnchorRight","MuiMenuItem","root","NavBar","sections","isMobile","drawer","setDrawer","anchorEl","setAnchorEl","handleButtonsClick","section","window","scrollTo","behavior","current","offsetTop","LanguageMenu","Menu","Boolean","lang","i","MenuItem","onClick","countryCode","svg","AppBar","Toolbar","spacing","ButtonBase","marginLeft","event","currentTarget","Icon","IconButton","edge","aria-label","Drawer","anchor","toLowerCase","Introduction","socials","icon","url","SocialButtons","social","margin","target","href","rel","Grid","item","sm","lg","introduction","alt","src","About","refProp","about","story","Button","size","contactRef","hire","process","download","cv","Experience","experience","setExperience","MyTimeLine","Timeline","experiences","TimelineItem","TimelineOppositeContent","year","TimelineSeparator","TimelineDot","TimelineConnector","TimelineContent","height","Paper","elevation","component","name","location","school","align","pro","work","Dialog","fullScreen","content","image","alignSelf","Projects","project","setProject","ProjectsRenderer","projects","category","justifyContent","ProjectsCategory","md","img","skills","skill","subSkills","subSkill","reformulations","reformulation","images","legend","conclusion","Divider","Contact","MyTextField","TextField","fullWidth","contact","onSubmit","e","preventDefault","CircularProgress","emailjs","sendForm","then","res","sent","reset","err","console","log","xs","required","label","firstName","lastName","type","subject","multiline","rows","send","Blog","blog","setBlog","Blogs","blogs","source","App","useMediaQuery","useTheme","breakpoints","down","aboutRef","experienceRef","projectsRef","blogRef","ThemeProvider","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.41ff815b.chunk.js","sourcesContent":["import React, { createContext, useState, useMemo, useContext, useCallback } from \"react\";\r\n\r\nconst LanguageContext = createContext(null);\r\n\r\nexport function LanguageProvider({ children }) {\r\n    const [language, setLanguage] = useState(\"fr\")\r\n\r\n    const languages = {\r\n        \"en\": {\r\n            flag: \"US\",\r\n            file: require(\"../languages/en-US.json\")\r\n        },\r\n        \"fr\": {\r\n            flag: \"FR\",\r\n            file: require(\"../languages/fr-FR.json\")\r\n        }\r\n    }\r\n\r\n    const GetFlags = useCallback(() => Object.keys(languages).map(key => {\r\n        return (\r\n            {\r\n                flag: languages[key].flag,\r\n                language: key\r\n            }\r\n        )\r\n    }), [languages])\r\n    const GetLanguageFlag = useCallback(() => languages[language].flag, [language, languages])\r\n    const GetLanguageFile = useCallback(() => languages[language].file, [language, languages])\r\n\r\n    const value = useMemo(() => ({ language, setLanguage, GetLanguageFile, GetLanguageFlag, GetFlags }), [language, setLanguage, GetLanguageFile, GetLanguageFlag, GetFlags]);\r\n\r\n    return (\r\n        <LanguageContext.Provider value={value}>\r\n            {children}\r\n        </LanguageContext.Provider>\r\n    )\r\n}\r\n\r\nexport const useLanguage = () => useContext(LanguageContext)","import React, { forwardRef, useImperativeHandle, useState } from \"react\";\r\nimport { Typography, Modal, Container, Box, Button, Grid, Icon, useMediaQuery, useTheme } from \"@material-ui/core\";\r\n\r\nexport function Hero({ title, subTitle, center, classes }) {\r\n    return (\r\n        <Box>\r\n            <Typography variant=\"h1\" className={classes.title} style={{ textAlign: center ? \"center\" : \"left\" }}>{title}</Typography>\r\n            <Typography variant=\"h4\" paragraph style={{ textAlign: center ? \"center\" : \"left\", whiteSpace: \"pre-line\" }}>{subTitle}</Typography>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport const MyModal = forwardRef((props, ref) => {\r\n    const [modal, setModal] = useState(null)\r\n    const { classes } = props\r\n\r\n    useImperativeHandle(ref, () => {\r\n        return {\r\n            setModal: setModal,\r\n        }\r\n    })\r\n\r\n    return (\r\n        <Modal disableEnforceFocus disableAutoFocus open={modal !== null} onClose={() => setModal(null)}>\r\n            <Container className={classes.modal}>\r\n                {modal}\r\n            </Container>\r\n        </Modal>\r\n    )\r\n})\r\n\r\nexport function Carousel({ children }) {\r\n    const [index, setIndex] = useState(0)\r\n    const length = children && children.length\r\n    const isMobile = useMediaQuery(useTheme().breakpoints.down(\"sm\"))\r\n\r\n    return (\r\n        <Grid container style={{ alignItems: \"center\", textAlign: \"center\", justifyContent: \"center\", alignContent: \"center\" }}>\r\n            <Grid item sm={12} md={1}>\r\n                {isMobile ? null : <Button color=\"inherit\" variant=\"text\" onClick={() => setIndex(index === 0 ? length - 1 : index - 1)}>\r\n                    <Icon>arrow_left</Icon>\r\n                </Button>}\r\n            </Grid>\r\n            <Grid item sm={12} md={10} style={{ justifyContent: \"center\", display: \"flex\" }}>\r\n                {children[index]}\r\n            </Grid>\r\n            <Grid item sm={12} md={1}>\r\n                {isMobile ?\r\n                    <Button color=\"inherit\" variant=\"text\" onClick={() => setIndex(index === 0 ? length - 1 : index - 1)}>\r\n                        <Icon>arrow_left</Icon>\r\n                    </Button>\r\n                    : null\r\n                }\r\n                <Button color=\"inherit\" variant=\"text\" onClick={() => setIndex((index + 1) % length)}>\r\n                    <Icon>arrow_right</Icon>\r\n                </Button>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}","import React, { createContext, useMemo, useContext, useRef } from \"react\";\r\nimport { MyModal } from \"../components/CustomComponents\";\r\n\r\nconst ModalContext = createContext(null);\r\n\r\nexport function ModalProvider({ children, classes }) {\r\n    const modalRef = useRef(null)\r\n    const value = useMemo(() => ({ modalRef }), [modalRef]);\r\n    return (\r\n        <ModalContext.Provider value={value} >\r\n            <MyModal ref={modalRef} classes={classes} />\r\n            {children}\r\n        </ModalContext.Provider>\r\n    )\r\n}\r\n\r\nexport const useModal = () => useContext(ModalContext).modalRef","import { makeStyles } from \"@material-ui/core\";\r\nimport { purple } from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles({\r\n  title: {\r\n    fontWeight: 'bold',\r\n    fontSize: 52\r\n  },\r\n  subTitle: {\r\n    fontSize: 32\r\n  },\r\n  container: {\r\n    marginTop: 250,\r\n    marginBottom: 250\r\n  },\r\n  textField: {\r\n    background: 'linear-gradient(90deg, #cccccc,#FFFFFF, #cccccc)',\r\n    border: 0,\r\n    borderRadius: 3,\r\n  },\r\n  buttonWrapper: {\r\n    marginTop: 10\r\n  },\r\n  modal: {\r\n    textAlign: 'center',\r\n    position: 'absolute',\r\n    left: '50%',\r\n    top: '50%',\r\n    transform: 'translate(-50%, -50%)'\r\n  },\r\n  paper: {\r\n    padding: '6px 16px',\r\n    color: \"white\",\r\n    width: \"100%\",\r\n    backgroundColor: purple[900]\r\n  },\r\n  navbar: {\r\n    backgroundColor: \"#121212\",\r\n    color: \"white\"\r\n  },\r\n  brand: {\r\n    flexGrow: 1,\r\n    display: \"flex\"\r\n  },\r\n  brandText: {\r\n    cursor: 'pointer',\r\n    marginBottom: 0,\r\n    display: \"inline\"\r\n  }\r\n}, { index: 1 });\r\n\r\nexport default useStyles","import { createMuiTheme } from \"@material-ui/core\";\r\nimport { purple, teal } from \"@material-ui/core/colors\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: purple[900]\r\n    },\r\n    secondary: {\r\n      main: teal[500]\r\n    },\r\n    background: {\r\n      default: \"#121212\",\r\n      paper: \"#121212\"\r\n    },\r\n    text: {\r\n      primary: \"#000\"\r\n    }\r\n  },\r\n  overrides: {\r\n    MuiDialog:{\r\n      paper:{\r\n        color: \"white\"\r\n      }\r\n    },\r\n    MuiDrawer: {\r\n      paperAnchorRight: {\r\n        color: \"white\"\r\n      }\r\n    },\r\n    MuiMenuItem:{\r\n      root:{\r\n        color: \"white\"\r\n      }\r\n    }\r\n  }\r\n}, { index: 1 })\r\n\r\nexport default theme","import React, { useState } from \"react\";\r\nimport { AppBar, Box, ButtonBase, Drawer, Icon, IconButton, Menu, MenuItem, Toolbar } from \"@material-ui/core\";\r\nimport { FaBars } from \"react-icons/fa\";\r\nimport { useLanguage } from \"../providers/LanguageContext\";\r\nimport ReactCountryFlag from \"react-country-flag\"\r\n\r\nfunction NavBar(props) {\r\n    const { sections, classes, isMobile } = props\r\n    const [drawer, setDrawer] = useState(false);\r\n    const [anchorEl, setAnchorEl] = useState(false);\r\n    const { GetLanguageFile, GetLanguageFlag, GetFlags, setLanguage } = useLanguage()\r\n\r\n    const handleLanguageMenu = event => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleButtonsClick = section => {\r\n        window.scrollTo({ behavior: \"smooth\", top: sections[section].ref.current.offsetTop - 100 })\r\n        setDrawer(false);\r\n    };\r\n\r\n    function NavBarButtons() {\r\n        return (\r\n            Object.keys(sections).map(\r\n                (section, i) => <IconButton color=\"inherit\" key={i} onClick={() => handleButtonsClick(section)} >\r\n                    {GetLanguageFile().navbar[section.toLowerCase()]}\r\n                </IconButton>\r\n            )\r\n        )\r\n    }\r\n\r\n    function MobileNavBarButtons() {\r\n        return (\r\n            <>\r\n                <IconButton\r\n                    edge=\"start\"\r\n                    color=\"inherit\"\r\n                    aria-label=\"menu\"\r\n                    onClick={() => setDrawer(true)}\r\n                >\r\n                    <FaBars />\r\n                </IconButton>\r\n                <Drawer\r\n                    anchor=\"right\"\r\n                    open={drawer}\r\n                    onClose={() => setDrawer(false)}\r\n                >\r\n                    {Object.keys(sections).map((section, i) =>\r\n                        <MenuItem key={i} onClick={() => handleButtonsClick(section)}>\r\n                            {section}\r\n                        </MenuItem>\r\n                    )}\r\n                </Drawer>\r\n            </>\r\n        )\r\n    }\r\n\r\n    function LanguageMenu() {\r\n        return (\r\n            <Menu open={Boolean(anchorEl)} anchorEl={anchorEl} onClose={() => setAnchorEl(null)} >\r\n                {GetFlags().map((lang, i) =>\r\n                    <MenuItem key={i} onClick={() => { setLanguage(lang.language); setAnchorEl(null) }}>\r\n                        <ReactCountryFlag countryCode={lang.flag} svg />\r\n                    </MenuItem>\r\n                )}\r\n            </Menu>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <AppBar color=\"default\" className={classes.navbar}>\r\n            <Toolbar>\r\n                <Box container className={classes.brand} spacing={5}>\r\n                    <h2 className={classes.brandText} onClick={() => window.scrollTo({ behavior: \"smooth\", top: 0 })}>\r\n                        Antonin J.\r\n                    </h2>\r\n                    <ButtonBase style={{ marginLeft: 25 }} onClick={handleLanguageMenu}>\r\n                        <ReactCountryFlag countryCode={GetLanguageFlag()} svg />\r\n                        <Icon>expand_more</Icon>\r\n                    </ButtonBase>\r\n                    <LanguageMenu />\r\n                </Box>\r\n                {isMobile ? MobileNavBarButtons() : NavBarButtons()}\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default NavBar","import React from \"react\";\r\n\r\nimport { Container, Grid } from \"@material-ui/core\";\r\nimport { FaFacebook, FaTwitter, FaYoutube, FaLinkedin, FaItchIo, FaGithub, FaInstagram } from \"react-icons/fa\";\r\n\r\nimport { Hero } from \"./CustomComponents\";\r\nimport { useLanguage } from \"../providers/LanguageContext\";\r\n\r\nfunction Introduction(props) {\r\n    const { classes } = props\r\n    const { GetLanguageFile } = useLanguage()\r\n    const socials = [\r\n        {\r\n            icon: (props) => <FaLinkedin {...props} />,\r\n            url: \"https://www.linkedin.com/in/antonin-juquel/\"\r\n        },\r\n        {\r\n            icon: (props) => <FaItchIo {...props} />,\r\n            url: \"https://somindras.itch.io\"\r\n        },\r\n        {\r\n            icon: (props) => <FaGithub {...props} />,\r\n            url: \"https://github.com/AntoninJuquel\"\r\n        },\r\n        {\r\n            icon: (props) => <FaFacebook {...props} />,\r\n            url: \"https://www.facebook.com/AntoninJuquel/\"\r\n        },\r\n        {\r\n            icon: (props) => <FaTwitter {...props} />,\r\n            url: \"https://twitter.com/Somindras\"\r\n        },\r\n        {\r\n            icon: (props) => <FaInstagram {...props} />,\r\n            url: \"https://www.instagram.com/antoninjuquel/\"\r\n        },\r\n        {\r\n            icon: (props) => <FaYoutube {...props} />,\r\n            url: \"https://www.youtube.com/channel/UCsgdfHWgax10z-av8KwzLlw\"\r\n        }\r\n    ]\r\n\r\n    function SocialButtons() {\r\n        return (\r\n            socials.map((social, i) =>\r\n                <a style={{ margin: \"0px 5px 15px\" }} key={i} target=\"_blank\" href={social.url} rel=\"noopener noreferrer\">\r\n                    <social.icon style={{ fontSize: 28, color: \"white\" }} />\r\n                </a>\r\n            )\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Container className={classes.container}>\r\n            <Grid container>\r\n                <Grid item sm={12} lg={6}>\r\n                    <Hero classes={classes} title={GetLanguageFile().introduction.title} subTitle={GetLanguageFile().introduction.subTitle} />\r\n                    <Grid container>\r\n                        <SocialButtons />\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item sm={12} lg={6}>\r\n                    <img alt=\"MyImage\" src=\"https://ih0.redbubble.net/image.725661211.7020/flat,1000x1000,075,f.jpg\" width=\"100%\" />\r\n                </Grid>\r\n            </Grid>\r\n        </Container >\r\n    )\r\n}\r\n\r\nexport default Introduction","import React from \"react\";\r\nimport { Container, Grid, Button } from \"@material-ui/core\";\r\nimport { useLanguage } from \"../providers/LanguageContext\";\r\n\r\nimport { Hero } from \"./CustomComponents\";\r\n\r\nfunction About(props) {\r\n    const { classes } = props\r\n    const { GetLanguageFile } = useLanguage();\r\n    return (\r\n        <Container ref={props.refProp} className={classes.container}>\r\n            <Hero classes={classes} title={GetLanguageFile().about.title} subTitle={GetLanguageFile().about.story} />\r\n            <Grid container spacing={10} className={classes.buttonWrapper}>\r\n                <Grid item>\r\n                    <Button color=\"primary\" variant=\"contained\" size=\"large\" onClick={() => window.scrollTo({ top: props.contactRef.current.offsetTop - 64 })}>\r\n                        <strong>{GetLanguageFile().about.hire}</strong>\r\n                    </Button>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Button color=\"primary\" variant=\"contained\" size=\"large\" href={process.env.PUBLIC_URL + \"/documents/cv.pdf\"} download>\r\n                        <strong>{GetLanguageFile().about.cv}</strong>\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default About","import React, { useState } from \"react\";\r\nimport { Timeline, TimelineItem, TimelineSeparator, TimelineDot, TimelineConnector, TimelineContent, TimelineOppositeContent } from \"@material-ui/lab\";\r\nimport { Button, ButtonBase, Container, Dialog, Grid, Paper, Typography } from \"@material-ui/core\";\r\nimport { FaSchool, FaBuilding } from \"react-icons/fa\";\r\n\r\nimport { Hero } from \"./CustomComponents\";\r\n\r\nimport experiences from \"../json/experiences.json\";\r\n\r\nimport { useLanguage } from \"../providers/LanguageContext\";\r\n\r\nfunction Experience(props) {\r\n    const { classes } = props\r\n    const { GetLanguageFile } = useLanguage()\r\n    const [experience, setExperience] = useState(null)\r\n\r\n    function MyTimeLine(props) {\r\n        return (\r\n            <Container>\r\n                <Typography style={{ textAlign: \"center\" }} variant=\"h4\">\r\n                    {props.title}\r\n                </Typography>\r\n                <Timeline {...props}>\r\n                    {props.experiences.map((experience, i) =>\r\n                        <TimelineItem key={i}>\r\n                            <TimelineOppositeContent>\r\n                                <Typography color=\"inherit\">\r\n                                    {experience.year}\r\n                                </Typography>\r\n                            </TimelineOppositeContent>\r\n                            <TimelineSeparator>\r\n                                <TimelineDot color=\"inherit\" variant=\"outlined\">\r\n                                    {props.icon}\r\n                                </TimelineDot>\r\n                                <TimelineConnector />\r\n                            </TimelineSeparator>\r\n                            <TimelineContent>\r\n                                <ButtonBase\r\n                                    style={{ width: \"100%\", height: \"100%\" }}\r\n                                    onClick={() => setExperience(experience)}\r\n                                >\r\n                                    <Paper elevation={3} className={classes.paper}>\r\n                                        <Typography variant=\"h6\" component=\"h1\">\r\n                                            {experience.name}\r\n                                        </Typography>\r\n                                        <Typography>{experience.location}</Typography>\r\n                                    </Paper>\r\n                                </ButtonBase>\r\n                            </TimelineContent>\r\n\r\n                        </TimelineItem>\r\n                    )}\r\n                </Timeline>\r\n            </Container>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Container ref={props.refProp} className={classes.container}>\r\n            <Hero classes={classes} title={GetLanguageFile().experience.title} />\r\n            <Grid container>\r\n                <Grid item sm={12} lg={6}>\r\n                    <MyTimeLine title={GetLanguageFile().experience.school} align=\"right\" experiences={experiences.school} icon={<FaSchool />} />\r\n                </Grid>\r\n                <Grid item sm={12} lg={6}>\r\n                    <MyTimeLine title={GetLanguageFile().experience.pro} align=\"left\" experiences={experiences.work} icon={<FaBuilding />} />\r\n                </Grid>\r\n            </Grid>\r\n            {\r\n                experience ?\r\n                    <Dialog fullScreen open={true} style={{ padding: 25 }}>\r\n                        <Button style={{ position: \"fixed\", width: \"5%\", backgroundColor: \"black\", fontWeight: \"bold\", top: 30, left: 30 }} onClick={() => setExperience(null)} color=\"primary\">CLOSE</Button>\r\n                        <Container>\r\n                            {\r\n                                experience.content.map(content => {\r\n                                    return (\r\n                                        <>\r\n                                            <Hero classes={classes} title={content.title ?? \"\"} subTitle={content.text ?? \"\"} />\r\n                                            {content.image ? <img style={{ alignSelf: \"center\" }} src={process.env.PUBLIC_URL + content.image} alt={content.image} /> : null}\r\n                                        </>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </Container>\r\n                    </Dialog>\r\n                    : null\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Experience","import React, { useState } from \"react\";\r\nimport { Container, Grid, ButtonBase, Button, Dialog, Divider } from \"@material-ui/core\";\r\n\r\nimport { Hero } from \"./CustomComponents\";\r\n\r\nimport projects from \"../json/projects.json\";\r\nimport { useLanguage } from \"../providers/LanguageContext\";\r\n\r\nfunction Projects(props) {\r\n    const { GetLanguageFile } = useLanguage()\r\n    const { classes, isMobile } = props\r\n    const [project, setProject] = useState(null);\r\n\r\n    function ProjectsRenderer() {\r\n        return (\r\n            Object.keys(projects).map((category, i) =>\r\n                <Container key={i}>\r\n                    <Hero classes={classes} title={GetLanguageFile().projects[category.toLowerCase()]} />\r\n                    <Grid style={{ justifyContent: isMobile ? \"center\" : \"normal\" }} container>\r\n                        <ProjectsCategory category={category} />\r\n                    </Grid>\r\n                </Container>\r\n            )\r\n        )\r\n    }\r\n\r\n    function ProjectsCategory({ category }) {\r\n        return (\r\n            projects[category].map((project, i) =>\r\n                <Grid item lg={3} md={6} sm={12} key={i} style={{ textAlign: \"center\" }}>\r\n                    <ButtonBase>\r\n                        <img src={project.img} width=\"250\" alt={project.title} onClick={() => setProject(project)} />\r\n                    </ButtonBase>\r\n                    <Hero classes={classes} subTitle={project.title} center />\r\n                    {project.subTitle ? <p>{project.subTitle}</p> : null}\r\n                </Grid>\r\n            )\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Container ref={props.refProp} className={classes.container}>\r\n            <Hero classes={classes} title={GetLanguageFile().projects.title} />\r\n            <ProjectsRenderer />\r\n            { project != null ?\r\n                <Dialog fullScreen open={true} style={{ padding: 25 }}>\r\n                    <Hero classes={classes} title={project.title} center />\r\n                    <Button style={{ position: \"fixed\", width: \"25%\", backgroundColor: \"black\", fontWeight: \"bold\" }} onClick={() => setProject(null)} color=\"primary\">CLOSE</Button>\r\n                    <Container>\r\n                        {\r\n                            project.skills ? project.skills.map((skill) => {\r\n                                return (\r\n                                    <>\r\n                                        <Hero classes={classes} title={skill.title} />\r\n                                        <ul>\r\n                                            {skill.subSkills.map((subSkill, i) => {\r\n                                                return (\r\n                                                    <li key={i}><Hero classes={classes} subTitle={subSkill} /></li>\r\n                                                )\r\n                                            })}\r\n                                        </ul>\r\n                                        {skill.reformulations.map((reformulation, i) => {\r\n                                            return (\r\n                                                <Hero classes={classes} subTitle={reformulation} />\r\n                                            )\r\n                                        })}\r\n                                        {skill.images.map(image => {\r\n                                            return (\r\n                                                <>\r\n                                                    <img style={{ alignSelf: \"center\" }} src={process.env.PUBLIC_URL + image.src} alt={image.legend} />\r\n                                                    <Hero center classes={classes} subTitle={image.legend} />\r\n                                                </>\r\n                                            )\r\n                                        })}\r\n                                        <Hero classes={classes} subTitle={skill.conclusion} />\r\n                                        {project.url ? <Button href={project.url} target=\"_blank\" rel=\"noopener noreferrer\" color=\"primary\" variant=\"contained\" size=\"large\"><strong>Voir</strong></Button> : null}\r\n                                        {project.src ? <Button style={{ marginLeft: 10 }} href={project.src} target=\"_blank\" rel=\"noopener noreferrer\" color=\"primary\" variant=\"contained\" size=\"large\"><strong>Code source</strong></Button> : null}\r\n                                        <Divider style={{ height: 5, backgroundColor: \"white\", marginBottom: 50 }} />\r\n                                    </>\r\n                                )\r\n                            }) : null\r\n                        }\r\n                    </Container>\r\n                </Dialog>\r\n                : null}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Projects","import React from \"react\";\r\nimport { Container, Grid, TextField, Button, CircularProgress, Typography } from \"@material-ui/core\";\r\nimport emailjs from \"emailjs-com\";\r\nimport { Hero } from \"./CustomComponents\";\r\nimport { useModal } from \"../providers/ModalContext\";\r\nimport { useLanguage } from \"../providers/LanguageContext\";\r\n\r\nfunction Contact(props) {\r\n    const modal = useModal()\r\n    const { classes } = props\r\n    const { GetLanguageFile } = useLanguage()\r\n\r\n    function SendEmail(e) {\r\n        const { target } = e\r\n        e.preventDefault()\r\n        modal.current.setModal(<CircularProgress color=\"inherit\" />)\r\n        emailjs.sendForm(\"service_outlook\", \"template_contact\", target, \"user_l1Qb3tJvE4nAlYoJdTisr\")\r\n            .then((res) => {\r\n                modal.current.setModal(\r\n                    <>\r\n                        <Typography variant=\"h6\">{GetLanguageFile().contact.sent}</Typography>\r\n                        <Button variant=\"contained\" size=\"large\" onClick={() => modal.current.setModal(null)}>OK</Button>\r\n                    </>\r\n                )\r\n                target.reset()\r\n            }, (err) => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    function MyTextField(props) {\r\n        return (\r\n            <TextField\r\n                color=\"primary\"\r\n                variant=\"filled\"\r\n                fullWidth\r\n                className={classes.textField}\r\n                {...props}\r\n            />\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <Container ref={props.refProp} className={classes.container}>\r\n            <Hero classes={classes} title={GetLanguageFile().contact.title} />\r\n            <form onSubmit={SendEmail}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12} lg={6} >\r\n                        <MyTextField required name=\"first_name\" label={GetLanguageFile().contact.firstName} />\r\n                    </Grid>\r\n                    <Grid item xs={12} lg={6}>\r\n                        <MyTextField name=\"last_name\" label={GetLanguageFile().contact.lastName} />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <MyTextField required name=\"email\" label=\"Email\" type=\"email\" />\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <MyTextField required name=\"subject\" label={GetLanguageFile().contact.subject} />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <MyTextField required multiline rows={5} name=\"message\" label=\"Message\" />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Button color=\"primary\" type=\"submit\" variant=\"contained\" size=\"large\"><strong>{GetLanguageFile().contact.send}</strong></Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </Container >\r\n    )\r\n}\r\n\r\nexport default Contact","import React, { useState } from \"react\";\r\nimport { Container, ButtonBase, Grid, Typography, Button, Dialog } from \"@material-ui/core\";\r\n\r\nimport { Hero } from \"./CustomComponents\";\r\n\r\nimport { useLanguage } from \"../providers/LanguageContext\";\r\n\r\nimport blogs from \"../json/blogs.json\";\r\n\r\nfunction Blog(props) {\r\n    const { language } = useLanguage();\r\n    const { classes} = props\r\n    const [blog, setBlog] = useState(null);\r\n\r\n    function Blogs() {\r\n        return (\r\n            blogs.map((blog, i) =>\r\n                <Grid item lg={3} md={6} sm={12} key={i} style={{ textAlign: \"center\" }}>\r\n                    <ButtonBase>\r\n                        <img src={blog.img} width=\"250\" alt={blog.title[language]} onClick={() => setBlog(blog)}/>\r\n                    </ButtonBase>\r\n                    <Hero classes={classes} subTitle={blog.title[language]} center />\r\n                    <Hero classes={classes} subTitle={blog.subTitle} center />\r\n                </Grid>\r\n            )\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Container ref={props.refProp} className={classes.container}>\r\n            <Hero classes={classes} title=\"Blogs\" />\r\n            <Blogs />\r\n            {\r\n                blog != null ?\r\n                    <Dialog fullScreen open={true} style={{padding: 25}}>\r\n                        <Hero classes={classes} title={blog.title[language]} subTitle={blog.subTitle} center />\r\n                        <Button style={{position: \"fixed\", width: \"25%\", backgroundColor: \"black\", fontWeight: \"bold\"}} onClick={() => setBlog(null)} color=\"primary\">CLOSE</Button>\r\n                        <Container>\r\n                        {\r\n                            blog.sections.map(section => {\r\n                                return(\r\n                                    <>\r\n                                        <div style={{margin: 50}}></div>\r\n                                        <Hero classes={classes} title={section.title ?? \"\"} subTitle={section.text ?? \"\"}/>\r\n                                        {section.image ? <img style={{alignSelf: \"center\"}} src={process.env.PUBLIC_URL + section.image} alt={section.text ?? \"\"}/> : null}\r\n                                        {section.source ? <a href={section.source} target=\"_blank\" rel=\"noopener noreferrer\">source</a> : null}\r\n                                        <div style={{margin: 50}}></div>\r\n                                    </>\r\n                                )\r\n                            })\r\n                        }\r\n                        </Container>\r\n                    </Dialog> \r\n                : null\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Blog","import React, { useRef } from 'react';\r\nimport './App.css';\r\n\r\nimport { ThemeProvider, useTheme, useMediaQuery } from \"@material-ui/core\";\r\nimport { LanguageProvider } from './providers/LanguageContext';\r\nimport { ModalProvider } from './providers/ModalContext';\r\n\r\nimport useStyles from \"./utilities/Styles\";\r\nimport theme from \"./utilities/Theme\";\r\n\r\nimport NavBar from './components/Navbar';\r\nimport Introduction from './components/Introduction';\r\nimport About from './components/About';\r\nimport Experience from './components/Experience';\r\nimport Projects from './components/Projects';\r\nimport Contact from './components/Contact';\r\nimport Blog from './components/Blog';\r\n\r\nfunction App() {\r\n  const classes = useStyles()\r\n\r\n  const isMobile = useMediaQuery(useTheme().breakpoints.down(\"sm\"))\r\n\r\n  const aboutRef = useRef(null)\r\n  const experienceRef = useRef(null)\r\n  const projectsRef = useRef(null)\r\n  const contactRef = useRef(null)\r\n  const blogRef = useRef(null)\r\n\r\n  const sections = {\r\n    \"About\": {\r\n      ref: aboutRef\r\n    },\r\n    \"Experience\": {\r\n      ref: experienceRef\r\n    },\r\n    \"Projects\": {\r\n      ref: projectsRef\r\n    },\r\n    \"Blog\": {\r\n      ref: blogRef\r\n    },\r\n    \"Contact\": {\r\n      ref: contactRef\r\n    }\r\n  }\r\n\r\n  return (\r\n    <LanguageProvider >\r\n      <ThemeProvider theme={theme}>\r\n        <ModalProvider classes={classes}>\r\n          <NavBar sections={sections} classes={classes} isMobile={isMobile} />\r\n          <Introduction classes={classes} />\r\n          <About refProp={aboutRef} contactRef={contactRef} classes={classes} />\r\n          <Experience refProp={experienceRef} classes={classes} />\r\n          <Projects refProp={projectsRef} classes={classes} isMobile={isMobile} />\r\n          <Blog refProp={blogRef} classes={classes} />\r\n          <Contact refProp={contactRef} classes={classes} />\r\n        </ModalProvider>\r\n      </ThemeProvider>\r\n    </LanguageProvider>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}